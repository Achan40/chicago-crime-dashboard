# Probably shouldn't use heroku dockhero
# Lots of issues with getting api to serve on https sites
# Pretty sure this is a dead addon too, poor docs. Also have to pay $7 a month
# Not worth the cost imo.
version: '2.2.1'

volumes:
  cube-schema:
     driver_opts:
           type: none
           device: /Users/Aaron/Desktop/chicago-crime-dashboard/react-dashboard/schema
           o: bind
  cube-file:
     driver_opts:
           type: none
           device: /Users/Aaron/Desktop/chicago-crime-dashboard/react-dashboard/cube.js
           o: bind
  cube-router:
     driver_opts:
           type: none
           device: /Users/Aaron/Desktop/chicago-crime-dashboard/react-dashboard/.cubestore/router
           o: bind
  cube-worker-1:
     driver_opts:
           type: none
           device: /Users/Aaron/Desktop/chicago-crime-dashboard/react-dashboard/.cubestore/worker_1
           o: bind
  cube-worker-2:
     driver_opts:
           type: none
           device: /Users/Aaron/Desktop/chicago-crime-dashboard/react-dashboard/.cubestore/worker_2
           o: bind
  redis-c:
     driver_opts:
           type: none
           device: /Users/Aaron/Desktop/chicago-crime-dashboard/react-dashboard/redis
           o: bind

services:
  cube:
    restart: always
    image: cubejs/cube:v0.29.8
    ports:
      # It's better to use random port binding for 4000/3000 ports
      # without it you will not able to start multiple projects inside docker
      - 4000:4000  # Cube.js API and Developer Playground
    env_file: .env # Read of env file for configurations
    volumes:
      - cube-schema:/cube/conf
      - cube-file:/cube/conf
      # We ignore Cube.js deps, because they are built-in inside the official Docker image
      # - /Users/Aaron/Desktop/chicago-crime-dashboard/react-dashboard/.empty:/cube/conf/node_modules/@cubejs-backend/
    depends_on:
      - cubestore_worker_1
      - cubestore_worker_2
      - cube_refresh_worker
      - redis
  
  cube_refresh_worker:
    restart: always
    image: cubejs/cube:v0.29.8
    env_file: .env
    volumes:
      - cube-schema:/cube/conf
      - cube-file:/cube/conf

  cubestore_router:
    restart: always
    image: cubejs/cubestore:v0.29.8
    environment:
      - CUBESTORE_WORKERS=cubestore_worker_1:10001,cubestore_worker_2:10002
      - CUBESTORE_REMOTE_DIR=/cube/data
      - CUBESTORE_META_PORT=9999
      - CUBESTORE_SERVER_NAME=cubestore_router:9999
      - COMPOSE_CONVERT_WINDOWS_PATHS=1
    volumes:
      - cube-router:/cube/data

  cubestore_worker_1:
    restart: always
    image: cubejs/cubestore:v0.29.8
    environment:
      - CUBESTORE_WORKERS=cubestore_worker_1:10001,cubestore_worker_2:10002
      - CUBESTORE_SERVER_NAME=cubestore_worker_1:10001
      - CUBESTORE_WORKER_PORT=10001
      - CUBESTORE_REMOTE_DIR=/cube/data
      - CUBESTORE_META_ADDR=cubestore_router:9999
      - COMPOSE_CONVERT_WINDOWS_PATHS=1
    volumes:
      - cube-worker-1:/cube/data
    depends_on:
      - cubestore_router

  cubestore_worker_2:
    restart: always
    image: cubejs/cubestore:v0.29.8
    environment:
      - CUBESTORE_WORKERS=cubestore_worker_1:10001,cubestore_worker_2:10002
      - CUBESTORE_SERVER_NAME=cubestore_worker_2:10002
      - CUBESTORE_WORKER_PORT=10002
      - CUBESTORE_REMOTE_DIR=/cube/data
      - CUBESTORE_META_ADDR=cubestore_router:9999
      - COMPOSE_CONVERT_WINDOWS_PATHS=1
    volumes:
      - cube-worker-2:/cube/data
    depends_on:
      - cubestore_router

  redis:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    # volumes:
    #   - redis-c:/usr/local/etc/
    # logging:
    #   driver: none
